# text file for terraform commands and tips

* terraform init (to initialize the workload)

* terraform plan (show the plan for the resources you want to create)

* terraform apply (to finally create the resources)

* terraform destroy (to destroy the infrastructure you created)

* terraform destroy -target resource_type.name (to delete a particular resource)

* to use the output from one resource in another, you put it like this; ${resource_type.resource_name.attribute} 

* you can explicitly make a resource depend on another resource by using the "depends_on = {}"

* terraform validate (used to validate the syntax of your cofig file)

* terraform fmt (used to format your config file to make it more readable)

* terraform show (used to display the current state of the infra created by terraform)

* lifecycle rules can help you tell terraform not to delete a resource until the new resource has been created

* data sources help you read content or resources that are not managed by terraform

* when you want to use s3 as a remote backend for state, there are a few things you need to configure. First create an s3 bucket youll use for storing the state file
then youll need a dynamodb table if you want to enable state locking. the dynamodb table will have a partition key called "LockID" with type "string"
to configure the remote state, youll need to add a remote section to your terraform config file. check the documentation for further instructions.

* you can also store your backend config inside a terraform.tf file, instead of your main.tf file

* terraform state list (to list the resources in a state file)

* terraform state show resource_name (it shows all the attributes of the listed resource)

* terraform state mv SOURCE DEST (can be used to rename a resource or move it from one state file to another)

* terraform state pull (used to pull the state from a remote backend and display it on screen)

* terraform state rm RESOURCE (used to delete items from a state file)

* terraform taint

* terraform untaint

* export TF_LOG=<log level> (used to view logs. the levels are; INFO, WARNING, ERROR, DEBUG, TRACE)

* terraform import resource.resource_name id (used to import a resource created outside terraform into terraform for it to manage)

*  
